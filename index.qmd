---
title: "<span style='color: white;font-size: 0.7em;'>Data Visualization</span>"
subtitle: "<span style='color: white;'>Behavioral Data Science Toolbox 2024</span>"
author: "<span style='color: white;'>Lecturers: Abe Hofman, Annie Johansson, Lilian Ye</span>"
footer: "<span style='color: white;'>Cover photo made in R by <a href='https://art.djnavarro.net' style='color: pink; text-decoration: underline;'>Danielle Navarro</a></span>"
format: 
  revealjs:
    theme: "white"
    logo: images/uva_logo.png
    css: styles.css
editor: visual
title-slide-attributes:
  data-background-image: "images/coverphoto.jpg"
  data-background-size: auto
  data-background-opacity: "1.0"
  data-background-repeat: repeat
---

```{r, include=FALSE}
library(tidyverse)
```

# Course overview 📋 {background-color="#8000FF"}

::: footer
:::

## Content {.smaller .scrollable}

::: footer
:::

### Schedule

+-----------------+----------------------------------+--------------------------------------------------------------------------------------------------------------------+-----------------------------------------+
| When            | What                             | Self-study                                                                                                         | Tutorial                                |
+=================+==================================+====================================================================================================================+=========================================+
| Friday, 08/09\  | **Data Visualization Session 1** | \[Read\] DV book ch. 1, 3                                                                                          | Work on Data Visualization Assignment 1 |
| 12.00 - 15.00   |                                  |                                                                                                                    |                                         |
|                 | Good and bad plots               | \[Watch videos\] Fundamentals of Data Visualization                                                                |                                         |
|                 |                                  |                                                                                                                    |                                         |
|                 | ggplot basics                    |                                                                                                                    |                                         |
+-----------------+----------------------------------+--------------------------------------------------------------------------------------------------------------------+-----------------------------------------+
| Tuesday, 17/09\ | **Data Visualization Session 2** | \[Read\] DV Book ch. 3.7, 4.3, 5.3, 5.5, 5.6, 6.0, 6.1, 6.2, 8.1, 8.2, 8.3                                         | Work on Data Visualization Assignment 2 |
| 15.00 - 18.00   |                                  |                                                                                                                    |                                         |
|                 | Better plots                     | \[Watch videos\] Themes, Recycling Themes, Trend lines / Stats, Color scheme, Multiple plots, Facets, Saving plots |                                         |
| \               |                                  |                                                                                                                    |                                         |
|                 | Introduction to final assignment |                                                                                                                    |                                         |
+-----------------+----------------------------------+--------------------------------------------------------------------------------------------------------------------+-----------------------------------------+
| Tuesday, 08/10  | **Build a Shiny App**            | Extra/optional material: Shiny files (canvas)                                                                      | Work on Shiny Assignment                |
|                 |                                  |                                                                                                                    |                                         |
| 15.00 - 18.00   |                                  |                                                                                                                    |                                         |
+-----------------+----------------------------------+--------------------------------------------------------------------------------------------------------------------+-----------------------------------------+

: {tbl-colwidths="\[30,40, 50, 30\]"}

## Content {.smaller .scrollable}

::: footer
:::

### Learning Goals

-   Design visualizations that communicate the intended message clearly

-   Build data visualizations using the ggplot2 library in R

-   Build interactive dashboards

-   Pitch the results of a data visualization project to a client

## Content {.smaller .scrollable}

::: footer
:::

### Assignments {.smaller .scrollable}

+---------------------------------+------------------------------------------------+-------------------------------+--------------+
| Assignment                      | Content                                        | Deadline                      | Grading      |
+=================================+================================================+===============================+==============+
| Data Visualization Assignment 1 | Make a good and bad visualization              | Sunday, September 15th, 23:59 | 15%          |
|                                 |                                                |                               |              |
|                                 | Copy this plot                                 |                               |              |
+---------------------------------+------------------------------------------------+-------------------------------+--------------+
| Data Visualization Assignment 2 | Make a visualization for your final assignment | Sunday, September 22nd, 23:59 | 15%          |
|                                 |                                                |                               |              |
|                                 | Copy this (or multiple) plots                  |                               |              |
+---------------------------------+------------------------------------------------+-------------------------------+--------------+
| Build a Shiny App               | Recreate a Shiny dashboard                     | Sunday, October 13th, 23:59   | 10%          |
+---------------------------------+------------------------------------------------+-------------------------------+--------------+
| Final assignment                | Make 3 visualizations of Prowise Learn data    |                               | 60%          |
|                                 |                                                |                               |              |
|                                 | Pitch to Prowise colleagues                    |                               |              |
+---------------------------------+------------------------------------------------+-------------------------------+--------------+

Data visualization assignments make up a total of 20% of your final BDS Toolbox grade. ::: footer :::

## Content {.smaller .scrollable}

::: footer
:::

### Materials {.smaller .scrollable}

::: {layout-ncol="3"}
![[r4ds.had.co.nz](https://r4ds.had.co.nz/data-visualisation.html)](images/book_wickham.png){fig-align="left" width="333"}

![[socviz.co](https://socviz.co/)](images/book_healy.jpg){fig-align="left" width="400"}

-   [Videos on canvas](https://canvas.uva.nl/courses/47312/modules)
:::

#### Extra resources

-   [Claus Wilke: Fundamentals of Data Viz](https://clauswilke.com/dataviz/)

-   <https://psyteachr.github.io/introdataviz/plotstyle.html>

# Bad plots 💩 {background-color="#8000FF"}

::: footer
:::

## Today {style="h2 {   color: blue}"}

::: footer
:::

📊 What makes a plot good (and bad)?

🪄 Guiding principles

✏️ Work on assignment 1

## Why visualize data? 💬

::: footer
:::

::: fragment
![](images/why_viz1.png){width="400"}
:::

------------------------------------------------------------------------

## Anscombe's quartet {.smaller}

::: columns
::: {.column width="50%"}
-   ![Source: Same stats, different graphs](images/anscombe1.png) ![Source: Wikipedia](images/anscombe2.png)
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
#| fig.height: 10
library("datasauRus")
datasaurus_dozen %>% 
  ggplot2::ggplot(aes(x = x, y = y, color = dataset)) +
  ggplot2::geom_point() +
  ggplot2::theme_void() +
  ggplot2::geom_smooth(method = "lm", color = "gray", fill = "gray", alpha = .5) +
  ggplot2::theme(legend.position = "none", text = element_text(size = 30)) +
  ggplot2::facet_wrap(~dataset, ncol = 4)
```
:::
:::

::: footer
Packages: [datasauRus](https://jumpingrivers.github.io/datasauRus/), [anscombiser](https://paulnorthrop.github.io/anscombiser/).

More information: [Same Stats, Different Graphs](https://www.autodesk.com/research/publications/same-stats-different-graphs), [socviz.co](https://socviz.co/lookatdata.html#why-look-at-data).
:::

## Exploratory versus explanatory {.smaller .scrollable}

::: columns
::: {.column width="50%"}
![Source: [Natalia Kiseleva](https://eolay.tilda.ws/datavizcomics/en)](images/comic_natalia_kiseleva.png){fig-align="left" width="333"}
:::

::: {.column width="50%"}
![Source: [Scott McCloud](https://archive.org/details/understanding-comics/)](images/comic_scott_mccloud.gif){fig-align="left"}

-   **Exploratory**: examine the structure of your data.

-   **Explanatory:** tell a story with your data.
:::
:::

::: footer
Resources: [clauswilke.com](https://clauswilke.com/dataviz/telling-a-story.html) (telling a story and making a point), [susielu.com](https://www.susielu.com/data-viz/storytelling-in-dashboards) (different interpretation of exploratory/explanatory).
:::

::: notes
Exploratory in the sense of data exploration. Exploratory in the sense of visualization exploration (as in previous example, where the same data can be plotted in several ways). In both cases, you can create ugly plots.

We focus on explanatory data viz (also bridge to next). Beautiful plots!
:::

## [🏅 What can we learn about the 2024 Olympics?]{style="font-size: 0.7em;"} {.smaller .scrollable}

::: footer
:::

::: columns
::: {.column width="33%"}
[![Ireland is headed straight for zero?](images/ireland.png){width="100%"}](images/ireland.png)
:::

::: {.column width="33%"}
[![Stacked confusion!](images/brazil.jpeg){width="100%"}](images/brazil.jpeg)
:::

::: {.column width="33%"}
[![Did the Netherlands place 8th?](images/info_correct.jpeg){width="100%"}](images/info_correct2.jpeg)
:::
:::

::: columns
::: {.column width="50%"}
[![How long does it take you to understand it?](images/bbc.jpeg){width="75%"}](images/bbc.jpeg)
:::

::: {.column width="50%"}
[![Axes? Colors?](images/espn.png){width="75%"}](images/espn.png)
:::
:::

## Speed dates 💬

::: footer
:::

::: columns
::: {.column width="40%"}
-   What do you think about this plot?

-   What elements can be improved?

-   Are there still good things with the plot?
:::

::: {.column width="60%"}
![Karl Broman](images/broman_worst_graph.jpg)
:::
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![reddit.com/r/dataisugly](images/lidl.png){fig-align="left" width="500"}
:::

::: {.column width="40%"}
::: fragment
-   Misleading (or missing) information?
-   Many data visualizations might have a hidden agenda, due to e.g. marketing strategies.
:::
:::
:::

::: footer
Check out the classic from Darrel Huff [How to Lie with Statistics](https://www.penguin.co.uk/books/13565/how-to-lie-with-statistics-by-darrell-huff-with-pictures-by-mel-calman/9780140136296) [Lessions from How to Lie with Statistics.](https://towardsdatascience.com/lessons-from-how-to-lie-with-statistics-57060c0d2f19)
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![[Source: reddit.com/r/dataisbeautiful](https://www.reddit.com/r/dataisugly/)](images/data_ink.png){fig-align="left" width="544"}
:::

::: {.column width="40%"}
::: fragment
-   Data to ink ratio?
:::
:::
:::

::: footer
[How to maximize the data-to-ink ratio](https://www.codeconquest.com/blog/data-ink-ratio-explained-with-example/)
:::

------------------------------------------------------------------------

### Data to ink ratio

::: columns
::: {.column width="50%"}
![](images/data_ink.png)
:::

::: {.column width="50%"}
![](images/data_ink2.jpeg){height="500"}
:::
:::

::: footer
:::

------------------------------------------------------------------------

### Data to ink ratio

![](images/treemap.png)

::: footer
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![](images/colors.jpg){width="490"}
:::

::: {.column width="40%"}
::: fragment
-   Do the colors make sense?
:::
:::
:::

::: footer
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![](images/all_elements_needed.jpeg){width="490"}
:::

::: {.column width="40%"}
::: fragment
-   Are all elements needed?
:::
:::
:::

::: footer
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![](images/axes_correct.jpeg){height="500"}
:::

::: {.column width="40%"}
::: fragment
-   Are the axes correct?
:::
:::
:::

::: footer
:::

------------------------------------------------------------------------

### Are the axes correct?

::: columns
::: {.column width="60%"}
![](images/ireland.png)
:::

::: {.column width="40%"}
![](images/info_correct.jpeg)
:::
:::

::: footer
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![](images/stacked1.png)
:::

::: {.column width="40%"}
::: fragment
-   Is it simple?
:::
:::
:::

::: footer
:::

------------------------------------------------------------------------

### ⚠️ Stacked bar charts ⚠️

::: columns
::: {.column width="60%"}
![](images/stacked2.png)
:::

::: {.column width="40%"}
![](images/brazil.jpeg)
:::
:::

::: footer
:::

------------------------------------------------------------------------

💬

![](images/pie1.png)

::: footer
:::

------------------------------------------------------------------------

### ⚠️ Pie charts ⚠️

::: columns
::: {.column width="60%"}
![](images/pie2.jpeg)
:::

::: {.column width="40%"}
![](images/pie3.png) ![](images/pie4.png)
:::
:::

::: footer
:::

------------------------------------------------------------------------

### Visualizing proportions

-   Pie chart, stacked bar, or side-by-side bars?

![](images/proportions.png)

<https://clauswilke.com/dataviz/visualizing-proportions.html#>

::: footer
:::

------------------------------------------------------------------------

💬

::: columns
::: {.column width="60%"}
![](images/storytelling_before.png)
:::

::: {.column width="40%"}
::: fragment
-   Does it support one conclusion?
:::
:::
:::

::: footer
:::

------------------------------------------------------------------------

### Storytelling with data - show just one conclusion! ![](images/storytelling_after.png)

::: footer
:::

------------------------------------------------------------------------

![](images/mathgarden.png)

::: footer
:::

------------------------------------------------------------------------

### Spurious correlations

::: footer
:::

![Source: Tyler Vigen](images/spurious_correlation.png){fig-align="left"}

------------------------------------------------------------------------

## One dataset, many visualizations

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("gt")
data("pizzaplace")
pizza_top <- pizzaplace %>%
  dplyr::mutate(size = factor(size, levels = c("S", "M", "L"))) %>%
  dplyr::count(name, type, size, price, sort = TRUE) %>%
  dplyr::top_n(n = 5)
pizza_top %>%
  gt::gt() %>%
  gt::tab_header(title = "Pizza Top 5", subtitle = "2015") %>%
  gt::fmt_currency(columns = price, currency = "USD") %>%
  gt::tab_source_note(source_note = gt::md("Source: [pizzaplace dataset](https://gt.rstudio.com/articles/gt-datasets.html#pizzaplace)")) %>%
  gt::opt_stylize(style = 6)
```
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("ggplot2")
pizza_top %>%
  ggplot2::ggplot(aes(x = reorder(name, n, decreasing = TRUE), y = n)) +
  ggplot2::geom_point(aes(color = type, size = size)) +
  ggplot2::geom_text(aes(label = price), nudge_y = -30) +
  ggplot2::labs(title = "Pizza Top 5", subtitle = "2015", x = "name")
```
:::
:::

::: footer
:::

## One dataset, many visualizations

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("gt")
pizza_season <- pizzaplace %>%
  dplyr::mutate(month = lubridate::month(date, label = TRUE)) %>%
  dplyr::group_by(month) %>%
  dplyr::count(type)
pizza_season %>%
  tidyr::pivot_wider(names_from = month, values_from = n) %>%
  gt::gt() %>%
  gt::tab_header(title = "Pizza Season", subtitle = "2015") %>%
  gt::tab_source_note(source_note = gt::md("Source: [pizzaplace dataset](https://gt.rstudio.com/articles/gt-datasets.html#pizzaplace)")) %>%
  gt::opt_stylize(style = 6)
```
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
#| fig.height: 5
#| fig.show: "hold"
library("ggplot2")
library("lubridate")
fig_season_1 <- pizza_season %>%
  ggplot2::ggplot(aes(x = month, y = n, group = type)) +
  ggplot2::geom_line(aes(linetype = type)) +
  ggplot2::labs(title = "Pizza Season", subtitle = "2015")
fig_season_1

fig_season_2 <- pizza_season %>%
  ggplot2::ggplot(aes(x = month, y = n, group = type)) +
  ggplot2::geom_bar(aes(fill = type), stat = "identity") +
  ggplot2::labs(title = "Pizza Season", subtitle = "2015")
fig_season_2
```
:::
:::

::: footer
:::

## [Some good examples]{style="font-size: 0.7em;"} {.smaller .scrollable}

[![](images/good1.png){width="100%"}](images/good1.png) [Distributions are informative](https://clauswilke.com/dataviz/histograms-density-plots.html)

::: columns
::: {.column width="50%"}
[![](images/good2.png){width="100%"}](images/good2.png)
:::

::: {.column width="50%"}
[![](images/good3.png){width="100%"}](images/good3.png)
:::
:::

[NYT Graphic - Obamacare spending](https://www.nytimes.com/interactive/2023/09/05/upshot/medicare-budget-threat-receded.html?pgtype=Article&action=click&module=RelatedLinks)

[How to reproduce a NYT graphic](https://sean.netlify.app/post/how-to-reproduce-a-nyt-graphic/)

::: footer
:::

# Guiding principles 🪄 {background-color="#8000FF"}

::: footer
:::

## Tips for the best viz

-   Is it **explaining** data?

-   Is the information **complete and correct**?

-   Are **axes** correct? (+ Should they have a zero-point?)

-   Do the **colors** work?

-   Are all **elements** needed?

-   What is the **data to ink ratio?**

-   Is it **understandable & simple?**

-   Does it portray **one conclusion**?

::: footer
:::

## Break

::: footer
:::

```{r}
#| echo: true
#| results: false
library("RXKCD")
RXKCD::getXKCD(which = "833")
```

## 📝 Own work {.smaller .scrollable}

::: footer
:::

+-------------------------------------+-----------------------------------+-----------------------------------------------------+-------------------------------+
| Assignment                          | Content                           | Materials                                           | Deadline                      |
+=====================================+===================================+=====================================================+===============================+
| **Data Visualization Assignment 1** | Make a good and bad visualization | Lecture slides                                      | Sunday, September 15th, 23.59 |
|                                     |                                   |                                                     |                               |
|                                     | Copy this plot                    | \[Read\] DV book ch. 1, 3                           |                               |
|                                     |                                   |                                                     |                               |
|                                     |                                   | \[Watch videos\] Fundamentals of Data Visualization |                               |
+-------------------------------------+-----------------------------------+-----------------------------------------------------+-------------------------------+

# Better plots 📈 {background-color="#8000FF"}

## Today

::: columns
::: {.column width="50%"}
📊 More (your) good examples

✨ More data visualization features

📝 Introduction to final project
:::

::: {.column width="50%"}
Work on:

✏️ Brainstorm ideas for final project

✏️ Data viz assignment 2
:::
:::

:::footer
:::

## Recap

::: columns
::: {.column width="40%"}
✓ Keep it simple.

✓ Don't mislead.

✓ Tell one story.

✓ **First impressions matter!**
:::

::: {.column width="60%"}
![](images/misleading.jpeg){fig-align="center"}
:::
:::

::: footer
:::

## Chart junk?

::: columns
::: {.column width="60%"}
![NYT](images/chart_junk.png)
:::

::: {.column width="40%"}
![Claus Wilke](images/chart_junk2.png)
:::
:::

::: footer
:::

## Themes

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("cowplot")
fig_season_1 +
  cowplot::theme_cowplot()
```
:::

::: {.column width="50%"}
```{r, eval=FALSE}
#| echo: true
#| code-fold: true
# download.file("https://github.com/ipython/xkcd-font/raw/master/xkcd-script/font/xkcd-script.ttf", destfile = "xkcd-script.ttf")  # download xkcd Script font
# system("open xkcd-script.ttf", wait = FALSE)  # open and install xkcd Script font on MacOS
# download.file("http://simonsoftware.se/other/xkcd.ttf", destfile = "xkcd.ttf")  # download xkcd font
# system("open xkcd.ttf", wait = FALSE)  # open and install xkcd font on MacOS
library("showtext")
library("xkcd")
#sysfonts::font_add(family = "xkcd Script", regular = "xkcd-script.ttf")
showtext::showtext_auto()
xrange <- range(as.numeric(pizza_season$month))
yrange <- range(pizza_season$n)
ratioxy <- diff(xrange) / diff(yrange)
x <- 3
y <- 1180
scale <- 60
n <- 1
mapman <- ggplot2::aes(x, y, scale, ratioxy, angleofspine, anglerighthumerus, anglelefthumerus,
              anglerightradius, angleleftradius, anglerightleg, angleleftleg, angleofneck)
dataman <- tibble::tibble(x = x, y = y,
                          scale = scale,
                          ratioxy = ratioxy,
                          angleofspine = runif(n, -pi/2-pi/10, -pi/2+pi/10),
                          anglerighthumerus = runif(n, -pi/6-pi/10, -pi/6+pi/10),
                          anglelefthumerus = runif(n, pi+pi/6-pi/10, pi+pi/6+pi/10),
                          anglerightradius =  runif(n, -pi/4, pi/4),
                          angleleftradius =  runif(n, pi-pi/4, pi+pi/4),
                          anglerightleg = runif(n, 3*pi/2+pi/12, 3*pi/2+pi/12+pi/10),
                          angleleftleg = runif(n, 3*pi/2-pi/12-pi/10, 3*pi/2-pi/12),
                          angleofneck = runif(n, -pi/2-pi/10, -pi/2+pi/10))
datatalk <- tibble::tibble(xbegin = 4, ybegin = 1185, xend = 5, yend = 1215)
pizza_season %>%
  ggplot2::ggplot() +
  ggplot2::geom_smooth(aes(x = month, y = n, group = type, linetype = type),
                       color = "black", se = FALSE) +
  ggplot2::labs(title = "Pizza Season", subtitle = "2015") +
  ggplot2::theme_minimal() +
  ggplot2::theme(text = element_text(family = "xkcd Script", size = 30)) +
  ggplot2::annotate("text", x = 6.5, y = 1215, label = "The figures don't go\noff the charts, so\nwhat's the plot of this graph?", family="xkcd Script") +
  xkcd::xkcdaxis(xrange, yrange) +
  xkcd::xkcdman(mapman, dataman) +
  xkcd::xkcdline(aes(x = xbegin, y = ybegin, xend = xend, yend = yend),
           datatalk, xjitteramount = 0.4)
```
:::
:::

::: footer
Slide borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section) 

Packages: [cowplot](https://wilkelab.org/cowplot/articles/introduction.html), [firatheme](https://github.com/vankesteren/firatheme), [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/) (typography-centric themes), [ggthemes](https://jrnold.github.io/ggthemes/) (collection),<br>and [xkcd](https://r-forge.r-project.org/projects/xkcd/) (dormant), [ggpomological](https://www.garrickadenbuie.com/project/ggpomological/), [tvthemes](https://ryo-n7.github.io/tvthemes/), [wesanderson](https://github.com/karthik/wesanderson) (color palettes).
:::

::: notes
:::

## Colors

::: columns
::: {.column width="40%"}
```{r}
#| echo: true
#| code-fold: true
fig_season_2 +
  ggplot2::scale_fill_viridis_d()
```
:::

::: {.column width="40%"}
```{r}
#| echo: true
#| code-fold: true
fig_season_2 +
  ggplot2::scale_fill_brewer(type = "qual")
```
:::
:::

::: footer
Slide borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section)

Functions: [viridis](https://ggplot2.tidyverse.org/reference/scale_viridis.html) (optimized for continuous data), [colorbrewer](https://ggplot2.tidyverse.org/reference/scale_brewer.html) (optimized for discrete data, includes sequential, diverging, and qualitative color scales).

Resources: [viridis Color Maps for R](https://sjmgarnier.github.io/viridis/), [ColorBrewer 2.0](https://colorbrewer2.org/).
:::

::: notes
:::

## Color blindness {.smaller .scrollable}

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
# remotes::install_github("clauswilke/colorblindr")
library("colorblindr")
colorblindr::cvd_grid(fig_season_2)
```

![[Claus Wilke](https://clauswilke.com/dataviz/color-pitfalls.html#not-designing-for-color-vision-deficiency)](images/colorblindness.png)
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("MetBrewer")
MetBrewer::colorblind_palettes
fig_season_2 + ggplot2::scale_fill_manual(values = MetBrewer::met.brewer("VanGogh3", n = 4))
```
:::
:::

::: footer
Slide borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section)

Packages: [khroma](https://packages.tesselle.org/khroma/) (discrete data), [viridis](https://sjmgarnier.github.io/viridis/) (continuous data), [MetBrewer](https://github.com/BlakeRMills/MetBrewer) & [rijkspalette](https://vankesteren.github.io/rijkspalette/), [colorblindr](https://github.com/clauswilke/colorblindr), [colorspace](https://colorspace.r-forge.r-project.org/articles/ggplot2_color_scales.html).

Resources: [clauswilke.com](https://clauswilke.com/dataviz/color-pitfalls.html){.uri}, [hclwizard.org](https://hclwizard.org/).
:::

::: notes
:::

## Color accuracy {.smaller}

::: columns
::: {.column width="50%"}
Print-proof, [monitor/beamer-proof](https://www.benq.com/en-us/knowledge-center/knowledge/how-to-maintain-color-consistency-on-different-monitors.html), colorblind-proof?

-   Use grayscale (but [color-coding is superior](https://en.wikipedia.org/wiki/Color_coding_in_data_visualization))
-   Use a secondary aesthetic for color
-   Use a viridis color map

![Source: [benq.com](https://www.benq.com/en-us/knowledge-center/knowledge/how-to-maintain-color-consistency-on-different-monitors.html)](images/coloraccuracy1.jpeg){fig-align="left"}
:::

::: {.column width="50%"}
![Source: [Savi et al. (2018)](https://doi.org/10.1016/j.compedu.2017.12.008)](images/coloraccuracy2.png){fig-align="left"}
:::
:::

::: footer
Slide borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section)

Resources: [viridis Color Maps for R](https://sjmgarnier.github.io/viridis/).
:::

## Captions {.smaller}

::: columns
::: {.column width="50%"}
**Title** Descriptive or declarative

**Methods** Keep it brief

**Results** If not (fully captured) in title

**Definitions** Colors, line types, error bars, etc.

**Data source** If external
:::

::: {.column width="50%"}
![Source: [sketch.es](https://www.datasketch.es/project/655-frustrations-doing-data-visualization)](images/captions.png){fig-align="left"}
:::
:::

::: footer
Slides borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section)

Resources: [clauswilke.com](https://clauswilke.com/dataviz/figure-titles-captions.html), [more](https://www.internationalscienceediting.com/how-to-write-a-figure-caption/), [more](https://www.aje.com/arc/writing-effective-figure-legend/), [more](https://blog.bioturing.com/2018/05/10/how-to-craft-a-figure-legend-for-scientific-papers/).
:::

::: notes
:::

## Typography

::: columns
::: {.column width="50%"}
Learn everything about [typography](https://practicaltypography.com/).

Find inspiration and [recommendations](https://www.typewolf.com/recommendations).

Choose a font for [data visualizations](https://medium.com/nightingale/choosing-a-font-for-your-data-visualization-2ed37afea637).

Pick good [font combinations](https://fontjoy.com/).

Or just use [arial or helvetica](https://pubs.acs.org/doi/10.1021/acs.chemmater.6b00306).
:::

::: {.column width="50%"}
```{r fig.showtext = TRUE}
#| echo: true
#| code-fold: true
library("showtext")
sysfonts::font_add_google("Press Start 2P", "2P")
showtext::showtext_auto()
fig_season_2 +
  ggplot2::theme(text = element_text(family = "2P", size = 20))
```
:::
:::

::: footer
Slides borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section)

Packages: [showtext](https://github.com/yixuan/showtext).
:::

::: notes
:::

## File format/size {.smaller}

::: columns
::: {.column width="50%"}
-   File size: email attachment, webpage/image load time, compilation time
-   File format: resizing [vector vs. bitmap/raster](https://www.lifewire.com/vector-and-bitmap-images-1701238). For bitmap images, set the plot resolution: *dpi = c("retina", "print", "screen")*

```{r}
#| echo: true
#| eval: false
ggplot2::ggsave("awesome_plot.png",
                width = 5,
                height = 5,
                units = "cm",
                dpi = "retina")
```
:::

::: {.column width="50%"}
![Source: [clauswilke.com](https://clauswilke.com/dataviz/image-file-formats.html)](images/file_formats.png){fig-align="left"}
:::
:::

::: footer
Slides borrowed from [Alexander Savi (2022)](https://www.alexandersavi.nl/assets/lectures/2022_bds_toolbox/bds_toolbox_dataviz.html#/section)

Enlarge bitmap [with AI](https://letsenhance.io/) (paid). Yes, you can save to [.tex](https://daqana.github.io/tikzDevice/).
:::

## Font embedding {.smaller}

Vector images pick the closest font available (if the actual font is not available on the recipients computer). You can embed fonts into the vector image.

-   *showtext* [converts characters into polygons](https://github.com/yixuan/showtext/issues/46). Embedding is no longer required, but text is no longer searchable.
-   *extrafont* [supports font embedding](https://r-graphics.org/recipe-output-fonts-pdf), but supports fewer fonts.

Adobe Acrobat (paid version) can be used to [manually embed fonts in a PDF](https://www.adobe.com/uk/acrobat/resources/embed-fonts-in-pdf.html).

::: footer
Slides borrowed from Alexander Savi (2021) 

Packages: [showtext](https://github.com/yixuan/showtext), [extrafont](https://github.com/wch/extrafont).

Should [color profiles also be embedded](https://www.color.org/profile_embedding.xalter)? Not sure, and not clear how R/ggplot2 handles this.
:::

## Continue learning {.smaller}

::: columns
::: {.column width="50%"}
[RTFM](https://en.wikipedia.org/wiki/RTFM): [ggplot2 Book](https://ggplot2-book.org/)

Viz types and examples: [From Data to Viz](https://www.data-to-viz.com/#explore), [The R Graph Gallery](https://r-graph-gallery.com/), [clauswilke.com](https://clauswilke.com/dataviz/directory-of-visualizations.html)

Extensions: [ggplot2 Extensions Gallery](https://exts.ggplot2.tidyverse.org/gallery/)

Books: [Fundamentals of Data Visualization](https://clauswilke.com/dataviz/)

NYT: [What's going on in this graph?](https://www.nytimes.com/column/whats-going-on-in-this-graph)

Data: [Statistics Netherlands](https://edwindj.github.io/cbsodataR/) or *data()*

[#30DayChartChallenge](https://30daychartchallenge.org/)
:::

::: {.column width="50%"}
![Source: [data-to-viz.com](https://www.data-to-viz.com/#explore)](images/poster_big.png){fig-align="left"}
:::
:::

::: footer
:::

## Get inspiration {.smaller}

::: columns
::: {.column width="50%"}
Podcasts: [Data Stories](https://datastori.es/), [Explore Explain](https://www.visualisingdata.com/podcast/), [Data Viz Today](https://dataviztoday.com/)

Blogs: [FlowingData](https://flowingdata.com/)

Journals: [Nightingale](https://nightingaledvs.com/)

Comics: [Matt-Heun Hong](https://medium.com/@MattIanHong), [Martin Telefont](https://twitter.com/martintelefont/status/1147737522182742017), [Natalia Kiseleva](https://eolay.tilda.ws/datavizcomics/en)

Generative art: [Clause O. Wilke](https://clauswilke.com/art/), [Danielle Navarro](https://art.djnavarro.net/), [Thomas Lin Pedersen](https://www.data-imaginist.com/art)

Awards: [Information is Beautiful](https://www.informationisbeautifulawards.com/showcase?action=index&controller=showcase&page=1&pcategory=winner&type=awards)

Interactive visualizations: [R Psychologist](https://rpsychologist.com/viz)

Explorable explanations: [Nicky Case](https://ncase.me/), [Setosa](https://setosa.io/)
:::

::: {.column width="50%"}
![[Thomas Lin Pedersen](https://thomaslinpedersen.art/work/becoming/)](images/becoming_2.jpg){fig-align="left" height="500"}
:::
:::

::: footer
:::

## Interactive viz {.smaller}

::: columns
::: {.column width="50%"}
```{r}
#| eval: false
#| echo: true
sliderInput("bins", "Number of bins:", 
            min = 1, max = 50, value = 30)
plotOutput("distPlot")
```

```{r}
#| context: server
#| eval: false
#| echo: true
output$distPlot <- renderPlot({
  x <- faithful[, 2]  # Old Faithful Geyser data
  bins <- seq(min(x), max(x), length.out = input$bins + 1)
  hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
```

![[Shiny](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html)](images/shiny.png)
:::

::: {.column width="50%"}
[**shiny**](https://shiny.rstudio.com/) builds interactive web apps

[**ggplotly**](https://plotly.com/ggplot2/) converts ggplot2 figures into interactive figures

[gganimate](https://gganimate.com/) includes animated elements to ggplot2 figures

[htmlwidgets](https://www.htmlwidgets.org/) creates JavaScript visualization widgets

[flexdashboard](https://pkgs.rstudio.com/flexdashboard/) creates interactive dashboards

[ggvis](https://ggvis.rstudio.com/) (dormant)
:::
:::

::: footer
:::

## Break

```{r}
#| echo: true
#| results: false
library("RXKCD")
RXKCD::getXKCD(which = "2476")
```

::: footer
:::

# Best plots 🥇 {background-color="#8000FF"}

## ... that's up to you! 🫵

## Final assignment

## Project 1

## Project 2

## Project 3

## Project 4

## Project 5 

Information about final project
